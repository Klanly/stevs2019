name: windows-x64-gpu-vs2019
on: [push, pull_request]
jobs:
  windows-2019:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
      with:
        repository: nihui/realsr-ncnn-vulkan
        submodules: 'recursive'
    
    - name: patching
      run: |
        del src\CMakeLists.txt
        Invoke-WebRequest -Uri https://github.com/Klanly/stevs2019/releases/download/3.0/realsrcm.txt -OutFile src\CMakeLists.txt
        del src\ncnn\src\CMakeLists.txt
        Invoke-WebRequest -Uri https://github.com/Klanly/stevs2019/releases/download/3.0/rsrncnn.txt -OutFile src\ncnn\src\CMakeLists.txt
    - name: cache-vulkansdk
      id: cache-vulkansdk
      uses: actions/cache@v1
      with:
        path: "VulkanSDK"
        key: VulkanSDK-1.2.135.0-Installer-4
    - name: vulkansdk
      if: steps.cache-vulkansdk.outputs.cache-hit != 'true'
      run: |
        Invoke-WebRequest -Uri https://sdk.lunarg.com/sdk/download/1.2.135.0/windows/VulkanSDK-1.2.135.0-Installer.exe?Human=true -OutFile VulkanSDK-1.2.135.0-Installer.exe
        7z x -aoa ./VulkanSDK-1.2.135.0-Installer.exe -oVulkanSDK
        Remove-Item .\VulkanSDK\Demos, .\VulkanSDK\Samples, .\VulkanSDK\Third-Party, .\VulkanSDK\Tools, .\VulkanSDK\Tools32, .\VulkanSDK\Bin32, .\VulkanSDK\Lib32 -Recurse
    - name: configure
      run: |
        $env:VULKAN_SDK="$(pwd)/VulkanSDK"
        mkdir build; cd build
        cmake -A x64 ../src
    - name: build
      run: cmake --build build --config Release -j 2
      
    - name: ziping
      if: always()
      run: |
        Remove-Item -Recurse -Force models
        7z a C:\tfbb.7z "$env:GITHUB_WORKSPACE\build" -mqs -ms=on
      
    - name: uploadexe
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: finaa
        path: C:\tfbb.7z
